syntax = "proto3";

package reduct.proto;

import "google/protobuf/timestamp.proto";

// Represents a stored blob in a block
message Record {
  google.protobuf.Timestamp timestamp = 1;  // timestamp (works as ID)
  uint64 begin = 2;                         // begin position of a blob in a block
  uint64 end = 3;                           // end position of a blob in a block
}

// Represents a block of records.
// The storage engine create a new block if the current one bigger than EntrySettings::max_block_size
message Block {
  google.protobuf.Timestamp begin_time = 1;           // when the block started being recorded
  google.protobuf.Timestamp latest_record_time = 2;    // the timestamp of the latest record
  uint64 size = 3;                                // size of block in bytes (with protobuf overhead)
  repeated Record records = 4;                    // stored records
}


// Stored in blocks record
message EntryRecord {
  message MetaEntry {
    string key = 1;
    string value = 2;
  }

  bytes blob = 1;                       // blob of data
  repeated MetaEntry meta_data = 2;     // meta information as list of key-values

}
